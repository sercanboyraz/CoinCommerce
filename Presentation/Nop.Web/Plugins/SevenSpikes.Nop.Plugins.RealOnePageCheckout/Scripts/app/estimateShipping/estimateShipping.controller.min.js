"use strict";function EstimateShippingController(n,t,i,r){function s(){return f&&o&&!e}function h(){var n=!0;t.$watch("{country: vm.estimateShippingData.selectedEstimateShippingCountry, stateProvince: vm.estimateShippingData.selectedStateProvince, zipPostalCode: vm.estimateShippingData.selectedEstimateShippingZipPostalCode, estimateShipping: vm.estimateShippingData.estimateShipping}",function(t,r){!n&&t&&(angular.isDefined(r.country)||angular.isDefined(r.stateProvince)||angular.isDefined(r.zipPostalCode)||angular.isDefined(r.estimateShipping))?i.set(t):n=!1},!0)}var u=this;u.estimateShippingData={};u.estimateShippingData.isVisible=!0;u.estimateShippingData.isButtonEnabled=!1;var f=!1,o=!1,e=!1;n.$on("checkoutDataLoaded",function(n,t){i.init(t);var r=i.get();angular.isDefined(t.configuration.showEstimateShipping)&&(o=t.configuration.showEstimateShipping);angular.isDefined(t.configuration.hasProductsRequiringShipping)&&(f=t.configuration.hasProductsRequiringShipping);angular.isDefined(t.configuration.pickUpInStoreOnly)&&(e=t.configuration.pickUpInStoreOnly);r.isVisible=s();angular.copy(r,u.estimateShippingData);h()});n.$on("refresh",function(n,t){if(!(t.controller==undefined||t.controller=="EstimateShippingController"))return!1;var f=i.get();angular.copy(f,u.estimateShippingData);r.hideOverlay(".estimate-shipping-loader")});n.$on("togglePanel",function(n,t){angular.isDefined(t.hasProductsRequiringShipping)&&(f=t.hasProductsRequiringShipping);angular.isDefined(t.pickUpInStore)&&(e=t.pickUpInStore);u.estimateShippingData.isVisible=s()});n.$on("setEstimateShippingOverlay",function(){r.showOverlay(".estimate-shipping-loader")});u.stringFormat=r.stringFormat;u.renderHtml=r.trustAsHtml}angular.module("realOnePageCheckout.estimateShipping").controller("EstimateShippingController",EstimateShippingController);EstimateShippingController.$inject=["$rootScope","$scope","estimateShippingContext","objectUtility"];