"use strict";function billingAddressContext(u,o,e,c,v,t,r){var g,s={init:function(e){if((g=e.billingAddresses).selectedBillingAddress={},g.selectedBillingAddress.vat={},g.selectedBillingAddress.country={},g.selectedBillingAddress.stateProvince={},0<g.addresses.length){for(var t=0;t<g.addresses.length;t++)g.addresses[t].availableCountries=angular.copy(g.availableCountries),g.addresses[t].availableStates=angular.copy(g.availableStatesForNoCountry);var s=g.billingAddress;if(angular.isDefined(s)){s.availableCountries=angular.copy(g.availableCountries);var a=$.grep(g.addresses,function(e){return e.id===s.id});if(0<a.length){var r=a[0];r.availableStates=angular.copy(s.availableStates)}g.selectedBillingAddress=s}else s=angular.copy(g.addresses[0]),g.settings.countryEnabled&&e.configuration.defaultBillingCountryId&&(g.selectedBillingAddress.country.value=e.configuration.defaultBillingCountryId.toString()),s.availableStates=g.availableStates;g.settings.countryEnabled&&(g.countries=s.availableCountries),g.settings.stateProvinceEnabled&&(g.states=s.availableStates),g.selectedBillingAddress.vat.vatNumber=s.vat.vatNumber,g.selectedBillingAddress.vat.vatNumberStatus=s.vat.vatNumberStatus,g.selectedBillingAddress.customAddressAttributes=s.customAddressAttributes,v.equalize(s,g.addresses)}b.setState(g)},get:function(){return g},set:function(r){if(g&&g.selectedBillingAddress){var d,e={},i=angular.copy(g.selectedBillingAddress);angular.isDefined(r.shipToSameAddress)&&r.shipToSameAddress,angular.copy(r.address,g.selectedBillingAddress),r.address.vat.vatNumber!==i.vat.vatNumber&&(e.newVatNumber=r.address.vat.vatNumber,d||(d={}),d.updateVatNumber=(l=r.address.vat.vatNumber,c.checkVatNumber(l).then(function(e){g.selectedBillingAddress.vat.vatNumberStatus=e.data.vatNumberStatus,b.setState(g)},function(e){return o.reject(e)})));for(var t=0;t<g.persistedBillingAddressFields.length;t++){var s=g.persistedBillingAddressFields[t];if("CountryId"!==s)if("StateProvinceId"!==s){var a=v.uncapitalizeFirstLetter(g.persistedBillingAddressFields[t]);r.address[a]!==i[a]&&(e["new"+s]=r.address[a],d||(d={}),d["update"+s]=S(s,r.address[a]))}else r.address.stateProvince.value!==i.stateProvince.value&&(e.newStateProvinceId=r.address.stateProvince.value,d||(d={}),d.updateStateProvince=S("StateProvinceId",r.address.stateProvince.value));else if(r.address.country.value!==i.country.value){var n=r.address.country.value;n&&0!=n.length||(g.states=angular.copy(r.address.availableStates),n=0),e.newCountryId=n,d||(d={}),d.updateCountry=A(n)}}angular.isDefined(d)&&u.$broadcast("billingContextChanging",e),o.all(d).then(function(){var e={};r.address.vat.vatNumber!==i.vat.vatNumber&&(e.newVatNumber=r.address.vat.vatNumber);for(var t=0;t<g.persistedBillingAddressFields.length;t++){var s=g.persistedBillingAddressFields[t];if("CountryId"!==s)if("StateProvinceId"!==s){var a=v.uncapitalizeFirstLetter(g.persistedBillingAddressFields[t]);r.address[a]!==i[a]&&(e["new"+s]=r.address[a])}else r.address.stateProvince.value!==i.stateProvince.value&&(e.newStateProvinceId=r.address.stateProvince.value);else r.address.country.value!==i.country.value&&(e.newCountryId=r.address.country.value)}angular.isDefined(d)&&u.$broadcast("billingContextChanged",e),b.setState(g),u.$broadcast("shipToSameAddress",{currentBillingAddress:g.selectedBillingAddress,shipToSameAddress:r.shipToSameAddress})},function(e){return g.selectedBillingAddress=b.getLastState(),u.$broadcast("billingContextChanged"),u.$broadcast("shipToSameAddress",{currentBillingAddress:g.selectedBillingAddress,shipToSameAddress:r.shipToSameAddress}),o.reject(e)})}var l}},b=t.instance();function A(a){return c.updateCountry(a,"Billing").then(function(){a=parseInt(a);var e={};return g.settings.stateProvinceEnabled&&(e.states=c.getStatesByCountryId(a)),-1!==g.countriesSubjectToVat.indexOf(a)&&(e.vatNumber=c.checkVatNumber(g.selectedBillingAddress.vat.vatNumber)),o.all(e).then(function(e){if(g.settings.stateProvinceEnabled){var t;g.states=e.states.data;var s=g.selectedBillingAddress.stateProvince.value;s!=b.getLastState().selectedBillingAddress.stateProvince.value?t=s:(t=0,g.selectedBillingAddress.stateProvince={}),S("StateProvinceId",t),r(function(){$(document).trigger({type:"addressStatesUpdated",statesDropdownId:"#billingStateProvince"})},100)}return-1!==g.countriesSubjectToVat.indexOf(a)&&(g.selectedBillingAddress.vat.vatNumberStatus=e.vatNumber.data.vatNumberStatus),b.setState(g),e},function(e){return g=b.getLastState(),o.reject(e)})},function(e){return g=b.getLastState(),o.reject(e)})}function S(e,t){return c.updateAddress(e,t,"billing").then(function(e){return e},function(e){return o.reject(e)})}return s}angular.module("realOnePageCheckout.billingAddress").factory("billingAddressContext",billingAddressContext),billingAddressContext.$inject=["$rootScope","$q","api","billingAddressService","objectUtility","stateHolder","$timeout"];