@model FooterModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Services.Configuration
@inject IStoreContext storeContext
@inject IWorkContext workContext
@inject ISettingService settingService

@{
    var storeId = (await storeContext.GetCurrentStoreAsync()).Id;
    var removeCopyright = await settingService.GetSettingByKeyAsync("emporiumthemesettings.removecopyright", false, storeId, true);
    var removeDesignedBy = await settingService.GetSettingByKeyAsync("emporiumthemesettings.removedesignedby", false, storeId, true);
    var footerLogoUrl = await Component.InvokeAsync("Widget", new { widgetZone = "emporium_footer_logo" });
}

<div class="footer">
    @await Component.InvokeAsync("Widget", new { widgetZone = "footer_top" })
    <div class="footer-upper">
        @if (!String.IsNullOrEmpty(await footerLogoUrl.RenderHtmlContentAsync()))
        {
            <div class="footer-logo">
                <img src="@footerLogoUrl" alt="footer_logo" />
            </div>
        }
        @await Component.InvokeAsync("NewsletterBox")
    </div>
    <div class="footer-middle">
        <div class="footer-block">
            <div class="title">
                <strong>@T("Footer.Information")</strong>
            </div>
            <ul class="list">
                @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                {
                    <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                }
                @if (Model.DisplayContactUsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                }
                @if (Model.SearchEnabled && Model.DisplayProductSearchFooterItem)
                {
                    <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a> </li>
                }
                @if (Model.NewsEnabled && Model.DisplayNewsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("NewsArchive")">@T("News")</a></li>
                }
                @if (Model.BlogEnabled && Model.DisplayBlogFooterItem)
                {
                    <li><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
                }
                @if (Model.ForumEnabled && Model.DisplayForumsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
                }
                @if (Model.NewProductsEnabled && Model.DisplayNewProductsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
                }
                @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                {
                    <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                }
            </ul>
        </div>
        <div class="footer-block">
            <div class="title">
                <strong>@T("Footer.MyAccount")</strong>
            </div>
            <ul class="list">
                @if (Model.DisplayCustomerInfoFooterItem)
                {
                    <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                }
                <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                @if (Model.DisplayCustomerAddressesFooterItem)
                {
                    <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                }
                @if (Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li>
                }
                @if (Model.AllowCustomersToCheckGiftCardBalance)
                {
                    <li><a href="@Url.RouteUrl("CheckGiftCardBalance")">@T("CheckGiftCardBalance")</a></li>
                }
                @if (Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
                }
                @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                {
                    <li><a href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a></li>
                }
                @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                {
                    <li><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
                }
                @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                {
                    <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                }
            </ul>
        </div>
        <div class="footer-block">
            <div class="title">
                <strong>@T("Footer.CustomerService")</strong>
            </div>
            <ul class="list">
                @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                {
                    <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                }
                @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                {
                    <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                }
            </ul>
        </div>
        <div class="socials-and-payments">
            <div class="social-icons">
                <div class="title">
                    <strong>@T("SevenSpikes.Themes.Emporium.Footer.Follow")</strong>
                </div>
                @await Component.InvokeAsync("SocialButtons")
            </div>
            <div class="pay-options">
                <div class="title">
                    <strong>@T("SevenSpikes.Themes.Emporium.Common.PaymentOptions")</strong>
                </div>
                <img src="@Url.Content("~/Themes/Emporium/Content/img/pay_icon1.png")" alt="" />
                <img src="@Url.Content("~/Themes/Emporium/Content/img/pay_icon2.png")" alt="" />
                <img src="@Url.Content("~/Themes/Emporium/Content/img/pay_icon3.png")" alt="" />
                <img src="@Url.Content("~/Themes/Emporium/Content/img/pay_icon6.png")" alt="" />
            </div>
        </div>
    </div>
    <div class="footer-lower">
        @if (!removeCopyright)
        {
            <div class="footer-powered-by">
                Powered by <a href="@(OfficialSite.Main)" target="_blank" @(Model.IsHomePage ? string.Empty : "rel=nofollow")>nopCommerce</a>
                @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
                    Find more info here https://www.nopcommerce.com/nopcommerce-copyright-removal-key*@
            </div>
        }
        @if (!removeDesignedBy)
        {
            <div class="footer-designed-by">
                Designed by <a href="https://www.nop-templates.com/" target="_blank">Nop-Templates.com</a>
            </div>
        }
        <div class="footer-disclaimer">
            @T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)
        </div>
        @if (Model.DisplayTaxShippingInfoFooter)
        {
            var inclTax = await workContext.GetTaxDisplayTypeAsync() == TaxDisplayType.IncludingTax;
            <div class="footer-tax-shipping">
                @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = await Html.GetTopicSeNameAsync("shippinginfo") }))
            </div>
        }

        @await Component.InvokeAsync("StoreThemeSelector")
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.Footer, additionalData = Model })
</div>